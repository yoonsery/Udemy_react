{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sery/Desktop/udemy/react/react_meetup/pages/index.js\";\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb'; // my-domain.com/\n\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A First Meetup',\n  image: 'https://images.unsplash.com/photo-1553604503-1ea63c3ba69c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1275&q=80',\n  address: 'Prague, Czechia',\n  description: 'This is a first meetup!'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  image: 'https://images.unsplash.com/photo-1565611487608-281f9c0cafb0?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1176&q=80',\n  address: 'Rotterdam, Netherlands',\n  description: 'This is a second meetup!'\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n} // âœ¨ If you have a data that changes multiple times every second, getServerSideProps are better\n// ðŸ¤” Need to wait for the page to be generated on every incoming request\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API or a file system\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n// âœ¨ If you don't need to the request object(eg. authentication) getStaticProps is better choice than getServerSideProps.\n//  faster than regenerating & fetching data for every incoming request\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(`mongodb+srv://yoonsery:${process.env.REACT_APP_MONGODB_PASSWORD}@cluster0.wb3vgzu.mongodb.net/meetups?retryWrites=true&w=majority`);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(() => ({\n        title: meetups.title,\n        address: meetups.address,\n        image: meetups.image,\n        id: meetups._id.toString()\n      }))\n    },\n    revalidate: 3600 // ì´ˆë‹¨ìœ„ë¡œ ì„¤ì •í•˜ë¯€ë¡œ 1ì‹œê°„\n\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/sery/Desktop/udemy/react/react_meetup/pages/index.js"],"names":["MeetupList","MongoClient","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","process","env","REACT_APP_MONGODB_PASSWORD","db","meetupsCollection","collection","find","toArray","close","map","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CAEA;;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,6JAJJ;AAKEC,EAAAA,OAAO,EAAE,iBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,gKAJJ;AAKEC,EAAAA,OAAO,EAAE,wBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AAEA,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAClB,0BAAyBC,OAAO,CAACC,GAAR,CAAYC,0BAA2B,mEAD9C,CAArB;AAGA,QAAMC,EAAE,GAAGL,MAAM,CAACK,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMT,OAAO,GAAG,MAAMQ,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAT,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAO;AACLb,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACa,GAAR,CAAY,OAAO;AAC1BnB,QAAAA,KAAK,EAAEM,OAAO,CAACN,KADW;AAE1BE,QAAAA,OAAO,EAAEI,OAAO,CAACJ,OAFS;AAG1BD,QAAAA,KAAK,EAAEK,OAAO,CAACL,KAHW;AAI1BF,QAAAA,EAAE,EAAEO,OAAO,CAACc,GAAR,CAAYC,QAAZ;AAJsB,OAAP,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE,IATP,CASa;;AATb,GAAP;AAWD;AAED,eAAelB,QAAf","sourcesContent":["import MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\n\n// my-domain.com/\n\nconst DUMMY_MEETUPS = [\n  {\n    id: 'm1',\n    title: 'A First Meetup',\n    image:\n      'https://images.unsplash.com/photo-1553604503-1ea63c3ba69c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1275&q=80',\n    address: 'Prague, Czechia',\n    description: 'This is a first meetup!',\n  },\n  {\n    id: 'm2',\n    title: 'A Second Meetup',\n    image:\n      'https://images.unsplash.com/photo-1565611487608-281f9c0cafb0?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1176&q=80',\n    address: 'Rotterdam, Netherlands',\n    description: 'This is a second meetup!',\n  },\n];\n\nfunction HomePage(props) {\n  return <MeetupList meetups={props.meetups} />;\n}\n\n// âœ¨ If you have a data that changes multiple times every second, getServerSideProps are better\n// ðŸ¤” Need to wait for the page to be generated on every incoming request\n\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n\n//   // fetch data from an API or a file system\n\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\n// âœ¨ If you don't need to the request object(eg. authentication) getStaticProps is better choice than getServerSideProps.\n//  faster than regenerating & fetching data for every incoming request\n\nexport async function getStaticProps() {\n  // fetch data from an API\n\n  const client = await MongoClient.connect(\n    `mongodb+srv://yoonsery:${process.env.REACT_APP_MONGODB_PASSWORD}@cluster0.wb3vgzu.mongodb.net/meetups?retryWrites=true&w=majority`\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map(() => ({\n        title: meetups.title,\n        address: meetups.address,\n        image: meetups.image,\n        id: meetups._id.toString(),\n      })),\n    },\n    revalidate: 3600, // ì´ˆë‹¨ìœ„ë¡œ ì„¤ì •í•˜ë¯€ë¡œ 1ì‹œê°„\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}